{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Session 1\
\
- What do we use Apache Camel for? Integration\
- What is Integration? Connecting disparate systems.\
- What are the things that make integration work.\
- Name some concepts that make up an integration\
	- Applications or Systems\
	- Applications/Systems have components\
	- Components may be business components or connecting components\
	- Connecting components have endpoints\
	- Endpoints are abstractions that models the end of a message channel through which a system can send or receive messages - HTTP, FTP, JMS, FILE, DB.\
	- Message channel is a conduit where connecting endpoints exchange messages\
	- Exchange contains the messages, input messages, output messages, Exceptions, Correlation IDs, the type of message pattern that is being used (InOut, InOnly), any properties\
	- Message contains the actual data that is being sent (JSON, XML, Text, CSV, Object), headers, attachments (email, images)\
\
- All the concepts above are standard integration concepts\
\
\
When you integration without using a framework you use these concepts? \
- For example, when you connect to an HTTP Restful server in Java, you use HttpClient\
- When you connect via JMS, you build bolder plate code to get a JMSConnection, then create a session, then create a Producer then send a message\
- similar, when you create a client, you create a Connection, session then a consumer\
- When you access a file, you create a File/Path object boiler plates\
\
- You also make sure that the receiving endpoint is able to understand the data you are sending, you may have to transform your data so the receiving entity is able to read it, nevermind translate\
- In case ANY of the endpoints are not operational, you will have to make sure that you can deal with connectivity issues\
- You may also assume that the other endpoint can process your data by persisting it to a table that does not exist, wrong assumption\
- You have have designed your code in such a way that they are loosely coupled and that your components are solid individually but you have to make sure that you look into the connectivities\
- ALL these are boiler plates mainly\
\
- And this is where frameworks like Camel, Spring Integration (Open Sourced), Mulesoft (Commercial), WSO2(OpenSource) come in.\
- These frameworks support or implement the Enterprise Integration Patterns. The EIP covers all the types of integrations you can think of.\
- Frameworks have abstracted most of the boiler plates and exposed them as DSLs to the programmer. They call them Fluent DSLs because they sound like verbs that humans can easily understand.\
\
\
\
But which one do you use? Whatever the architects of the company says basically. This is why you are using Camel.\
\
What do the frameworks and Integration tools do?\
1  They eliminate the boiler plates so you can pass the required configuration to make a connection from a component to another component possible\
2. They make it easier for you to place your routing in a smaller number of files so you focus on the business routing.\
3. They provide a means to you write translations and store them with the routing to make it easier for you to read and understand the business integration\
4. They assist you in processing low level exceptions\
\
What difficulties do you encounter with the frameworks?\
1. They all have different ways of making integration happen.\
2. They name entities differently\
3. They use their own DSLs. They define their own. Some use XMLs, others use Fluent APIs (Camel), Some use functional programming style.\
4. Some have security components already built-in (Identity Provider, SAML, OAuth2.0), others don\'92t\
5. Some have Admin UIs so you can track the health of the components\
6. Some have reporting modules, track the number of calls, transactions and charge the clients based on usages.\
\
Apache Camel and Spring Integration do not have these main features but they do the job. They are mainly geared towards Java developers.\
\
What are the challenges with frameworks?\
1. Mainly understanding the plethora of Fluent DSLs and their mandatory and optional parameters\
2. Although frameworks have high level abstractions there are occasions where the abstractions reveal its weaknesses due to the fact that the language has no other way of reprenting the complexity\
, ie. you would have to have some understanding of thread, although you don\'92t need to dive into threads to fix problems\
3. The DSLs are all language codes. They are Java calls or XML calls, or Scala calls. The advantage to the programmer is that they can deal with the lower level coding but they could also get trapped into it.\
4. Any more challenges?\
\
\
So how do we integrate with Camel? What concepts do we use to help us integrate with Camel? See the concepts above?\
\
- The best way to illustrate this is for us to create an integration scenario. This scenario should be enough to illustrate most of the prevalent problems\
1. The scenario I have created is small internet sports shoe shopping company where a customer already has an account previously registered with his address and payment details already entered.\
2. This company is so small it relies on third parties to store its customer delivery and payment information. All the company has is a small web site that only stores customer ID and item codes of a catalog.\
3. To complete an order, the company\'92s server has to integrate with three third parties.\
	1. A third party that stores the customer details and his payment details\
	2. A third party that receives the order \
	3. A third party that processes the invoice\
\
3.1 So the bare bones of the order from the main system consists of \
	1. CustomerID\
	2. Array of Items\
\
4. The system where the customer\'92s payment details and delivery details are processed by another system. That system exposes an API so that the main shopping component can access the customer details\
5. There is also a separate inventory system \
\
\
\
\
}